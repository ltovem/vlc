From e661879a5ab107e43773a5dd720f0110ab3be977 Mon Sep 17 00:00:00 2001
From: Gabriel Lafond Thenaille <gabriel@videolabs.io>
Date: Wed, 27 Mar 2024 11:21:08 +0100
Subject: [PATCH] Add pkg config support

---
 CMakeLists.txt | 37 ++++++++++++++++++++++++++++++++++++-
 whisper.pc.in  | 11 +++++++++++
 2 files changed, 47 insertions(+), 1 deletion(-)
 create mode 100644 whisper.pc.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index cc73265..494f7da 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -127,6 +127,8 @@ if (APPLE)
 
             set(WHISPER_EXTRA_LIBS  ${WHISPER_EXTRA_LIBS}  ${ACCELERATE_FRAMEWORK})
             set(WHISPER_EXTRA_FLAGS ${WHISPER_EXTRA_FLAGS} -DGGML_USE_ACCELERATE -DACCELERATE_NEW_LAPACK -DACCELERATE_LAPACK_ILP64)
+
+            list(APPEND LIBLIST "-framework Accelerate")
         else()
             message(FATAL_ERROR "Accelerate framework not found")
         endif()
@@ -147,6 +149,8 @@ if (APPLE)
                 )
             set(WHISPER_EXTRA_FLAGS ${WHISPER_EXTRA_FLAGS} -DGGML_USE_METAL)
 
+            list(APPEND LIBLIST "-framework Metal -framework MetalKit")
+
             if (WHISPER_METAL_NDEBUG)
                 set(WHISPER_EXTRA_FLAGS ${WHISPER_EXTRA_FLAGS} -DGGML_METAL_NDEBUG)
             endif()
@@ -193,6 +197,8 @@ if (APPLE)
             message(STATUS "CoreML framework found")
 
             set(WHISPER_EXTRA_FLAGS ${WHISPER_EXTRA_FLAGS} -DWHISPER_USE_COREML)
+
+            list(APPEND LIBLIST "-framework Foundation -framework CoreML")
         else()
             message(FATAL_ERROR "CoreML framework not found")
         endif()
@@ -500,6 +506,8 @@ if (WHISPER_COREML)
     set_target_properties(${TARGET} PROPERTIES
         COMPILE_FLAGS "-fobjc-arc"
         )
+
+    install(TARGETS ${TARGET} DESTINATION lib)
 endif()
 
 if (WHISPER_OPENVINO)
@@ -558,6 +566,7 @@ target_include_directories(${TARGET} PUBLIC
 
 if (WHISPER_COREML)
     target_link_libraries(${TARGET} PRIVATE whisper.coreml)
+    list(APPEND LIBLIST "-lwhisper.coreml")
 endif()
 
 if (WHISPER_OPENVINO)
@@ -621,12 +630,38 @@ include(GNUInstallDirs)
 
 install(TARGETS ${TARGET}
     LIBRARY  DESTINATION lib
-    ARCHIVE  DESTINATION lib/static
+    ARCHIVE  DESTINATION lib
     RUNTIME  DESTINATION bin
     RESOURCE DESTINATION bin
     PUBLIC_HEADER DESTINATION include
     )
 
+# convert lists of link libraries into -lstdc++ -lm etc..
+foreach(LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES})
+    if(IS_ABSOLUTE ${LIB} AND EXISTS ${LIB})
+        list(APPEND LIBLIST "${LIB}")
+    elseif(${LIB} MATCHES "-l:libunwind.a") # android toolchain
+        list(APPEND LIBLIST "-lunwind")
+    else()
+        list(APPEND LIBLIST "-l${LIB}")
+    endif()
+endforeach()
+if(LIBLIST)
+    # blacklist of libraries that should not be in Libs.private
+    list(REMOVE_ITEM LIBLIST "-lc" "-lpthread" "-lmingwex" "-lmingwthrd"
+        "-lmingw32" "-lmoldname" "-lmsvcrt" "-ladvapi32" "-lshell32"
+        "-luser32" "-lkernel32")
+    string(REPLACE ";" " " PRIVATE_LIBS "${LIBLIST}")
+else()
+    set(PRIVATE_LIBS "")
+endif(LIBLIST)
+
+# Produce a pkg-config file
+configure_file("whisper.pc.in" "whisper.pc" @ONLY)
+
+install(FILES "${CMAKE_CURRENT_BINARY_DIR}/whisper.pc" DESTINATION lib/pkgconfig)
+
+
 #
 # bindings
 #
diff --git a/whisper.pc.in b/whisper.pc.in
new file mode 100644
index 0000000..d428609
--- /dev/null
+++ b/whisper.pc.in
@@ -0,0 +1,11 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix="${prefix}"
+libdir="${exec_prefix}/lib"
+includedir="${prefix}/include"
+
+Name: @CMAKE_PROJECT_NAME@
+Description: Port of OpenAI's Whisper model in C/C++
+Version:
+Libs: -L${libdir} -lwhisper
+Libs.private: @PRIVATE_LIBS@
+Cflags: -I${includedir}
-- 
2.44.0

