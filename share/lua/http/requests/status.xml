<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?vlc --[[
vim:syntax=lua
<!--  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >
<  status.xml: VLC media player web interface
< - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >
<  Copyright (C) 2005-2009 the VideoLAN team
<
<  Authors: Antoine Cellerier <dionoea -at- videolan -dot- org>
<  			Rob Jonson <rob -at- hobbyistsoftware -dot- com>
<
< SPDX-License-Identifier: GPL-2.0-or-later
< - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
]]?>

<?vlc

--package.loaded.httprequests = nil --uncomment to debug changes
local httprequests = require "httprequests"

httprequests.processcommands()

local statusTable=httprequests.getstatus(true)

--In the information section, an extra copy of some data is presented
--in a non-standard way to keep compatibility.
local information = statusTable.information
statusTable.information = nil

print('<root>\n')
httprequests.printTableAsXml(statusTable,0)

local item = vlc.player.item()

?>
<information>
  <?vlc
    if information then
      httprequests.printTableAsXml(information,2)
    end
  ?>
    <category name="meta">
    <?vlc
      if item then
        local metas = item:metas()
        for k,v in pairs(metas) do
          local metadataContent = vlc.strings.convert_xml_special_chars( httprequests.xmlString(v) )
          print("<info name='"..httprequests.xmlString(k).."'>"..metadataContent.."</info>")
        end
      end
    ?>
    </category>
  <?vlc
    if item then
      local info = item:info()
      for k, v in pairs(info) do
        print("<category name='"..httprequests.xmlString(k).."'>")
          for k2, v2 in pairs(v) do
            print("<info name='"..httprequests.xmlString(k2).."'>"..httprequests.xmlString(v2).."</info>")
          end
        print("</category>")
      end
    end
  ?>
  </information>
</root>
