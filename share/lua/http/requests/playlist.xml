<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?vlc --[[
vim:syntax=lua
<!--  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >
<  playlist.xml: VLC media player web interface
< - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - >
<  Copyright (C) 2005-2006 the VideoLAN team
<
<  Authors: Antoine Cellerier <dionoea -at- videolan -dot- org>
<  Authors: Rob Jonson <rob -at- hobbyistsoftware -dot- com>
<
< SPDX-License-Identifier: GPL-2.0-or-later
< - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
]] ?>

<?vlc

--package.loaded.httprequests = nil --uncomment to debug changes
local httprequests = require "httprequests"

local printleaf = function(item)
	print ("\n<leaf")

	for k,v in pairs(item) do

		if (k~="type") then
			print(" "..httprequests.xmlString(k).."=\""..httprequests.xmlString(v).."\"")
		end
    end

	print ("/>")
end

local printnode = function(item)
	local children=NULL

	print ("\n<node")

	for k,v in pairs(item) do

		if (k=="type") then

		elseif (k=="children") then
			children=v._array
		else
			print(" "..httprequests.xmlString(k).."=\""..httprequests.xmlString(v).."\"")
		end
    end

	print (">")

	return children
end

printitem = function(item)
	local children=NULL

	if item.type=="node" then
		children=printnode(item)
		if (children) then
			for i,v in ipairs(children) do
				printitem(v)
			end
		end
		print ("</node>")
	else
		printleaf(item)
	end

end

httprequests.processcommands()

local pt=httprequests.playlisttable()

printitem(pt)


?>
